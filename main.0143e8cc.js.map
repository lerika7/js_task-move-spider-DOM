{"version":3,"sources":["scripts/main.js"],"names":["document","addEventListener","e","wall","querySelector","spider","wallRect","getBoundingClientRect","clientX","left","right","clientY","top","bottom","spiderWidth","width","spiderHeight","height","borderLeft","parseInt","window","getComputedStyle","borderLeftWidth","borderTop","borderTopWidth","newLeft","newTop","style"],"mappings":";AAAA,aAEAA,SAASC,iBAAiB,QAAS,SAACC,GAC5BC,IAAAA,EAAOH,SAASI,cAAc,SAC9BC,EAASL,SAASI,cAAc,WAEhCE,EAAWH,EAAKI,wBAGpBL,KAAAA,EAAEM,QAAUF,EAASG,MACrBP,EAAEM,QAAUF,EAASI,OACrBR,EAAES,QAAUL,EAASM,KACrBV,EAAES,QAAUL,EAASO,QAHrBX,CAQIY,IAAAA,EAAcT,EAAOU,MACrBC,EAAeX,EAAOY,OAEtBC,EAAaC,SACjBC,OAAOC,iBAAiBlB,GAAMmB,gBAC9B,IAGIC,EAAYJ,SAASC,OAAOC,iBAAiBlB,GAAMqB,eAAgB,IAErEC,EAAUvB,EAAEM,QAAUF,EAASG,KAAOS,EAAaJ,EAAc,EACjEY,EAASxB,EAAES,QAAUL,EAASM,IAAMW,EAAYP,EAAe,EAE/DS,EAAU,EACZA,EAAU,EACDA,EAAUX,EAAcR,EAASS,MAAQ,EAAIG,IACtDO,EAAUnB,EAASS,MAAQD,EAAc,EAAII,GAG3CQ,EAAS,EACXA,EAAS,EACAA,EAASV,EAAeV,EAASW,OAAS,EAAIM,IACvDG,EAASpB,EAASW,OAASD,EAAe,EAAIO,GAGhDlB,EAAOsB,MAAMlB,KAAUgB,GAAAA,OAAAA,EAAvB,MACApB,EAAOsB,MAAMf,IAASc,GAAAA,OAAAA,EAAtB","file":"main.0143e8cc.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\ndocument.addEventListener('click', (e) => {\n  const wall = document.querySelector('.wall');\n  const spider = document.querySelector('.spider');\n\n  const wallRect = wall.getBoundingClientRect();\n\n  if (\n    e.clientX < wallRect.left ||\n    e.clientX > wallRect.right ||\n    e.clientY < wallRect.top ||\n    e.clientY > wallRect.bottom\n  ) {\n    return;\n  }\n\n  const spiderWidth = spider.width;\n  const spiderHeight = spider.height;\n\n  const borderLeft = parseInt(\n    window.getComputedStyle(wall).borderLeftWidth,\n    10,\n  );\n\n  const borderTop = parseInt(window.getComputedStyle(wall).borderTopWidth, 10);\n\n  let newLeft = e.clientX - wallRect.left - borderLeft - spiderWidth / 2;\n  let newTop = e.clientY - wallRect.top - borderTop - spiderHeight / 2;\n\n  if (newLeft < 0) {\n    newLeft = 0;\n  } else if (newLeft + spiderWidth > wallRect.width - 2 * borderLeft) {\n    newLeft = wallRect.width - spiderWidth - 2 * borderLeft;\n  }\n\n  if (newTop < 0) {\n    newTop = 0;\n  } else if (newTop + spiderHeight > wallRect.height - 2 * borderTop) {\n    newTop = wallRect.height - spiderHeight - 2 * borderTop;\n  }\n\n  spider.style.left = `${newLeft}px`;\n  spider.style.top = `${newTop}px`;\n});\n"]}